from edge import HyperEdge
from graph import Graph
from node import Node
from edge import HyperEdge
from visualisation import draw

g = Graph()
n0 = Node(0, 0, "n0")
n1 = Node(0.25, 0.0, "n1")
n2 = Node(0.0, 0.25, "n2")
n3 = Node(0.25, 0.25, "n3")
n4 = Node(1, 1, "n4")
n5 = Node(1.0, 0.75, "n5")
n6 = Node(0.75, 1.0, "n6")
n7 = Node(0.75, 0.75, "n7")
n8 = Node(0.5, 0, "n8")
n9 = Node(1, 0.5, "n9")
n10 = Node(1, 0, "n10")
n11 = Node(0.75, 0.5, "n11")
n12 = Node(0.5, 0.25, "n12")
n13 = Node(0.75, 0.0, "n13")
n14 = Node(1.0, 0.25, "n14")
n15 = Node(0.75, 0.25, "n15")
n16 = Node(0, 0.5, "n16")
n17 = Node(0.5, 0.5, "n17")
n18 = Node(0.5, 1, "n18")
n19 = Node(0, 1, "n19")
n20 = Node(0.5, 0.75, "n20")
n21 = Node(0.25, 0.5, "n21")
n22 = Node(0.0, 0.75, "n22")
n23 = Node(0.25, 1.0, "n23")
n24 = Node(0.25, 0.75, "n24")

for n in [n0, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24]:
	g.add_node(n)

g.add_edge(HyperEdge((n0, n1), "E", boundary=True))
g.add_edge(HyperEdge((n1, n8), "E", boundary=True))
g.add_edge(HyperEdge((n2, n16), "E", boundary=True))
g.add_edge(HyperEdge((n0, n2), "E", boundary=True))
g.add_edge(HyperEdge((n1, n3), "E"))
g.add_edge(HyperEdge((n3, n12), "E"))
g.add_edge(HyperEdge((n3, n21), "E"))
g.add_edge(HyperEdge((n2, n3), "E"))
g.add_edge(HyperEdge((n0, n1, n2, n3), "Q", rip=True))
g.add_edge(HyperEdge((n1, n3, n8, n12), "Q", rip=True))
g.add_edge(HyperEdge((n2, n3, n16, n21), "Q", rip=True))
g.add_edge(HyperEdge((n3, n12, n17, n21), "Q", rip=True))
g.add_edge(HyperEdge((n4, n5), "E", boundary=True))
g.add_edge(HyperEdge((n5, n9), "E", boundary=True))
g.add_edge(HyperEdge((n6, n18), "E", boundary=True))
g.add_edge(HyperEdge((n4, n6), "E", boundary=True))
g.add_edge(HyperEdge((n5, n7), "E"))
g.add_edge(HyperEdge((n7, n11), "E"))
g.add_edge(HyperEdge((n7, n20), "E"))
g.add_edge(HyperEdge((n6, n7), "E"))
g.add_edge(HyperEdge((n4, n5, n6, n7), "Q", rip=True))
g.add_edge(HyperEdge((n5, n7, n9, n11), "Q", rip=True))
g.add_edge(HyperEdge((n6, n7, n18, n20), "Q", rip=True))
g.add_edge(HyperEdge((n7, n11, n17, n20), "Q", rip=True))
g.add_edge(HyperEdge((n8, n12), "E"))
g.add_edge(HyperEdge((n12, n17), "E"))
g.add_edge(HyperEdge((n11, n17), "E"))
g.add_edge(HyperEdge((n9, n11), "E"))
g.add_edge(HyperEdge((n9, n14), "E", boundary=True))
g.add_edge(HyperEdge((n10, n14), "E", boundary=True))
g.add_edge(HyperEdge((n10, n13), "E", boundary=True))
g.add_edge(HyperEdge((n8, n13), "E", boundary=True))
g.add_edge(HyperEdge((n12, n15), "E"))
g.add_edge(HyperEdge((n11, n15), "E"))
g.add_edge(HyperEdge((n14, n15), "E"))
g.add_edge(HyperEdge((n13, n15), "E"))
g.add_edge(HyperEdge((n8, n12, n13, n15), "Q"))
g.add_edge(HyperEdge((n11, n12, n15, n17), "Q"))
g.add_edge(HyperEdge((n9, n11, n14, n15), "Q"))
g.add_edge(HyperEdge((n10, n13, n14, n15), "Q"))
g.add_edge(HyperEdge((n16, n21), "E"))
g.add_edge(HyperEdge((n17, n21), "E"))
g.add_edge(HyperEdge((n17, n20), "E"))
g.add_edge(HyperEdge((n18, n20), "E"))
g.add_edge(HyperEdge((n18, n23), "E", boundary=True))
g.add_edge(HyperEdge((n19, n23), "E", boundary=True))
g.add_edge(HyperEdge((n19, n22), "E", boundary=True))
g.add_edge(HyperEdge((n16, n22), "E", boundary=True))
g.add_edge(HyperEdge((n21, n24), "E"))
g.add_edge(HyperEdge((n20, n24), "E"))
g.add_edge(HyperEdge((n23, n24), "E"))
g.add_edge(HyperEdge((n22, n24), "E"))
g.add_edge(HyperEdge((n16, n21, n22, n24), "Q"))
g.add_edge(HyperEdge((n17, n20, n21, n24), "Q"))
g.add_edge(HyperEdge((n18, n20, n23, n24), "Q"))
g.add_edge(HyperEdge((n19, n22, n23, n24), "Q"))

draw(g, "generated.png")