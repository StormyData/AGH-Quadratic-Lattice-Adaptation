from edge import HyperEdge
from graph import Graph
from node import Node
from edge import HyperEdge
from visualisation import draw
from productions.p3 import P3

g = Graph()
_n1 = Node(0, 0, "n1")
g.add_node(_n1)
_2n5 = Node(0.0, 0.25, "n2")
g.add_node(_2n5)
_2n8 = Node(0.25, 0.0, "n3")
g.add_node(_2n8)
_2n9 = Node(0.25, 0.25, "n4")
g.add_node(_2n9)
_n3 = Node(1, 1, "n5")
g.add_node(_n3)
_3n5 = Node(0.75, 1.0, "n6")
g.add_node(_3n5)
_3n8 = Node(1.0, 0.75, "n7")
g.add_node(_3n8)
_3n9 = Node(0.75, 0.75, "n8")
g.add_node(_3n9)
_n8 = Node(0, 0.5, "n9")
g.add_node(_n8)
_n7 = Node(0.5, 1, "n10")
g.add_node(_n7)
_n4 = Node(0, 1, "n11")
g.add_node(_n4)
_3n6 = Node(0.5, 0.75, "n12", hanging=True)
g.add_node(_3n6)
_2n6 = Node(0.25, 0.5, "n13", hanging=True)
g.add_node(_2n6)
_4n7 = Node(0.0, 0.75, "n14")
g.add_node(_4n7)
_4n8 = Node(0.25, 1.0, "n15")
g.add_node(_4n8)
_4n9 = Node(0.25, 0.75, "n16")
g.add_node(_4n9)
_n2 = Node(1, 0, "n17")
g.add_node(_n2)
_5n7 = Node(0.75, 0.0, "n18")
g.add_node(_5n7)
_5n8 = Node(1.0, 0.25, "n19")
g.add_node(_5n8)
_5n9 = Node(0.75, 0.25, "n20")
g.add_node(_5n9)

g.add_edge(HyperEdge((_n1, _2n5), "E", boundary=True))
g.add_edge(HyperEdge((_2n5, _n8), "E", boundary=True))
g.add_edge(HyperEdge((_n1, _2n8), "E", boundary=True))
g.add_edge(HyperEdge((_2n5, _2n9), "E"))
g.add_edge(HyperEdge((_2n9, _2n6), "E"))
g.add_edge(HyperEdge((_2n8, _2n9), "E"))
g.add_edge(HyperEdge((_n1, _2n5, _2n8, _2n9), "Q", rip=True))
g.add_edge(HyperEdge((_2n5, _2n9, _n8, _2n6), "Q", rip=True))
g.add_edge(HyperEdge((_n3, _3n5), "E", boundary=True))
g.add_edge(HyperEdge((_3n5, _n7), "E", boundary=True))
g.add_edge(HyperEdge((_n3, _3n8), "E", boundary=True))
g.add_edge(HyperEdge((_3n5, _3n9), "E"))
g.add_edge(HyperEdge((_3n9, _3n6), "E"))
g.add_edge(HyperEdge((_3n8, _3n9), "E"))
g.add_edge(HyperEdge((_n3, _3n5, _3n8, _3n9), "Q", rip=True))
g.add_edge(HyperEdge((_3n5, _3n9, _n7, _3n6), "Q", rip=True))
g.add_edge(HyperEdge((_n8, _2n6), "E"))
g.add_edge(HyperEdge((_n7, _3n6), "E"))
g.add_edge(HyperEdge((_n7, _4n8), "E", boundary=True))
g.add_edge(HyperEdge((_n4, _4n8), "E", boundary=True))
g.add_edge(HyperEdge((_n4, _4n7), "E", boundary=True))
g.add_edge(HyperEdge((_n8, _4n7), "E", boundary=True))
g.add_edge(HyperEdge((_2n6, _4n9), "E"))
g.add_edge(HyperEdge((_3n6, _4n9), "E"))
g.add_edge(HyperEdge((_4n8, _4n9), "E"))
g.add_edge(HyperEdge((_4n7, _4n9), "E"))
g.add_edge(HyperEdge((_n8, _2n6, _4n7, _4n9), "Q"))
g.add_edge(HyperEdge((_n7, _3n6, _4n8, _4n9), "Q"))
g.add_edge(HyperEdge((_n4, _4n7, _4n8, _4n9), "Q"))
g.add_edge(HyperEdge((_n2, _5n8), "E", boundary=True))
g.add_edge(HyperEdge((_n2, _5n7), "E", boundary=True))
g.add_edge(HyperEdge((_5n8, _5n9), "E"))
g.add_edge(HyperEdge((_5n7, _5n9), "E"))
g.add_edge(HyperEdge((_n2, _5n7, _5n8, _5n9), "Q"))

g.add_edge(HyperEdge((_3n9, _3n8, _5n9, _5n8), "Q", rip=True))
g.add_edge(HyperEdge((_3n8, _5n8), "E", boundary=True))
g.add_edge(HyperEdge((_3n9, _5n9), "E"))

g.add_edge(HyperEdge((_2n9, _2n8, _5n9, _5n7), "Q", rip=True))
g.add_edge(HyperEdge((_2n8, _5n7), "E", boundary=True))
g.add_edge(HyperEdge((_2n9, _5n9), "E"))

g.add_edge(HyperEdge((_2n9, _5n9, _3n9, _4n9), "Q", rip=True))

draw(g, "generated.png")
g.apply(P3())

draw(g, "post_generated.png")